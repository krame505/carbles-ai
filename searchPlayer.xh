#include <state.xh>
#include <driver.xh>

#ifndef _SEARCH_PLAYER_XH
#define _SEARCH_PLAYER_XH

typedef struct GameTree GameTree;

datatype NodeStatus {
  Unexpanded();
  Expanded(vector<GameTree> children, unsigned trials, vector<float> wins);
  Leaf(PlayerId winner);
};

struct GameTree {
  PlayerId player;
  Action action;
  State state;
  GameTree *parent;
  datatype NodeStatus status;
};

typedef struct SearchPlayer SearchPlayer;
struct SearchPlayer {
  Player super;
  unsigned timeout;
  vector<float> (*playoutHand)(SearchPlayer *this, State s, PlayerId p, Hand hands[]);
};

SearchPlayer makeSearchPlayer(unsigned timeout, vector<float> (*playoutHand)(SearchPlayer *this, State s, PlayerId p, Hand hands[]));
extern SearchPlayer heuristicSearchPlayer;
extern SearchPlayer searchPlayer;

#endif
