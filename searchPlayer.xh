#include <state.xh>
#include <driver.xh>

#ifndef _SEARCH_PLAYER_XH
#define _SEARCH_PLAYER_XH

typedef struct GameTree GameTree;

datatype NodeStatus {
  Unexpanded();
  Expanded(vector<GameTree> children, unsigned trials, vector<float> wins);
  Leaf(PlayerId winner);
};

struct GameTree {
  PlayerId player;
  Action action;
  State state;
  GameTree *parent;
  datatype NodeStatus status;
};

typedef vector<float> (*PlayoutFn)(State s, PlayerId p, Hand hands[], unsigned depth);

Player makeSearchPlayer(unsigned timeout, PlayoutFn playoutHand, unsigned depth);
Player makeHeuristicSearchPlayer();
Player makeDeepSearchPlayer();
Player makeRuleSearchPlayer();

#endif
