#include <unification.xh>
#include <list.xh>
#include <map.xh>
#include <prolog_utils.xh>
#include <string.xh>
#include <vector.xh>
#include <state.xh>
#include <stdio.h>
#include <stdlib.h>

#ifndef _DRIVER_XH
#define _DRIVER_XH

typedef struct Player Player;

struct Player {
  const char *name;
  unsigned (*getAction)(Player *this, State s, Hand h, Hand discard, unsigned turn, PlayerId p, vector<Action> actions);
};

PlayerId playGame(
    unsigned numPlayers, Player *players[numPlayers],
    closure<(PlayerId) -> void> updateTurn,
    closure<(PlayerId, Hand) -> void> updateHand,
    closure<(State) -> void> updateState,
    closure<(string) -> void> log);
PlayerId playQuietGame(unsigned numPlayers, Player *players[numPlayers]);
PlayerId playConsoleGame(unsigned numPlayers, Player *players[numPlayers], FILE *out);

#endif
